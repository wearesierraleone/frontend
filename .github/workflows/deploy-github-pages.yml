name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
      - gh-pages-clean # development branch for GitHub Pages
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Debug File Structure
        run: |
          echo "Current directory: $(pwd)"
          find . -type f -name "utils.js" | grep -v "node_modules"
          
      - name: Display utils.js Content
        run: |
          echo "First 10 lines of utils.js:"
          head -n 10 ./js/utils.js
          echo "Lines containing 'token':"
          grep -n "token" ./js/utils.js || echo "No lines with 'token' found"
          
      - name: Inject GitHub Token
        env:
          DATA_TOKEN: ${{ secrets.DATA_TOKEN }}
        run: |
          # Find the line containing github_access_token
          echo "Looking for the token line..."
          TOKEN_LINE=$(grep -n "github_access_token" ./js/utils.js | head -n 1)
          echo "Found token line: $TOKEN_LINE"
          
          if [ -n "$TOKEN_LINE" ]; then
            # Extract line number
            LINE_NUM=$(echo "$TOKEN_LINE" | cut -d':' -f1)
            echo "Line number: $LINE_NUM"
            
            # Create a backup of the file
            cp ./js/utils.js ./js/utils.js.bak
            
            # Insert the token at that line
            # Use different delimiters for sed to avoid escaping issues
            sed -i "${LINE_NUM}c\\            const token = \"$DATA_TOKEN\"; // Injected during build" ./js/utils.js
            
            echo "Replacement completed. Verifying new line:"
            sed -n "${LINE_NUM}p" ./js/utils.js
          else
            echo "Token line not found. Continuing without replacement."
          fi

      - name: Create .nojekyll file
        run: touch .nojekyll

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # The branch the action should deploy to
          folder: . # The folder the action should deploy
          clean: true # Automatically remove deleted files from the deploy branch
